To do:
- view list of all users -- done, user_list.html
- click on a user to view list of movies they've rated and the ratings -- done! judgment.py
- create a new user w/ password
	- validate form input: require at least email & password -- done
- log in as a user (session) --done
	- create login.html page (form)
	- write login app def:
		#from login page:
		-if user exists, go to index
		else if validation fails, go to login page
- while logged in & viewing movie info, add a new rating of that movie by logged in user (or update existing rating by that user for that movie)
	- view movie info page regardless of login status (pass movie ID as URL parameter) --done
	- if a user is logged in:
		- have a page to view all of logged in user's existing ratings (table of movies & ratings) --done!
		- when viewing movie page:
			- if user has already rated that movie before:
				- view existing rating --done!
				- be able to re-rate/ update existing rating for movie in question --done!
			- if user has not rated that movie before:
				- Add rating for unrated movie in question --done!
- search all movies --done! (with logged in user's ratings!) --done!
- change layout.html to show login link only if not already logged in and logout/my-ratings page link only if logged in --done!




nice to have:
- when creating a new user, check that user's email isn't already in database for an existing user


________________________________
Old Stuff

different ways to validate login data:
method 1:
	db = get row from db that checks for email and password
	if missing email or missing password or db doesn't exist:
		blah
	else
		you were actually successfuly, log in
method 2:
	if missing email or missing password:
		flash "you're missing an email or a password!"
		return back to login.html page
	else:
		check db for a row that has that email and that password

		if that row exists
			return to index page (login was successful!)

		else:
			return back to login.html page (login was unsuccessful)


